"http://localhost:5000/api/users/login?email="+david@gmail.com+"&password="1234564


http://localhost:5000/api/users/login?email=david@gmail.com&password=1234564

http://localhost:5000/api/users/login?email=yashwalg@gmail.com&password=123456

const requestOptions = {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ title: 'React POST Request Example' })
    };
    const response = await fetch('https://jsonplaceholder.typicode.com/posts', requestOptions);
    const data = await response.json();
	
	
	bcrypt.compare(password, user.password).then((isMatch) => {
      if (isMatch) {
        res.status(200).json({ flag: true });
		
	///////////////////////	
		
	import React, { Component } from "react";
import "./login.css";
import axios from "axios";
import { Link } from "react-router-dom";
import CreateAcc from "./CreateAcc";

class Login extends React.Component {
  state = {
    email: "",
    password: "",
  };

  flag = false;
  flags = "";
  handleChange = (e) => {
    const { name, value } = e.target;
    this.setState({ [name]: value });
  };

  handleSubmit = (e) => {
    e.preventDefault();
    axios(
      "http://localhost:5000/api/users/login?email=" +
        this.state.email +
        "&password=" +
        this.state.password
    ).then((result) => {
      if (result.data.msg === "logged in") {
        console.log("inside");
        this.props.isLogin(true);
      } else {
        console.log("result");
        alert(result.data.emailnotfound);
      }
    });
  };

  render() {
    return (
      <div className="login">
        <div>
          <logo />
        </div>

        <div className="loginBox">
          <img className="logo" src="carlogo1.png" alt="car logo"></img>
          <form onSubmit={this.handleSubmit}>
            <input
              className="email"
              type="text"
              name="email"
              placeholder="Enter Your Email..."
              required
              onChange={this.handleChange}
            />
            <br></br>
            <br></br>
            <input
              className="password"
              type="password"
              name="password"
              placeholder="Enter Your Password...."
              required
              onChange={this.handleChange}
            />
            <br></br>
            <br></br>

            <button className="button" onSubmit={this.handleSubmit}>
              LOG IN
            </button>
            <br></br>
            <br></br>
            <Link className="a" to="/Reset">
              Lost your password{" "}
            </Link>
            <br></br>
            <Link className="a" to="/Acc">
              Create an account
            </Link>
          </form>
        </div>
      </div>
    );
  }
}

export default Login;

///////////////////


const express = require("express");
const router = express.Router();
const bcrypt = require("bcryptjs");
const jwt = require("jsonwebtoken");
const keys = require("../../config/keys");

const validateRegisterInput = require("../../validation/register");
const validateLoginInput = require("../../validation/login");

const User = require("../../models/User");
const { json } = require("express");

router.post("/register", (req, res) => {
  console.log("register ");
  const { errors, isValid } = validateRegisterInput(req.body);

  if (!isValid) {
    return res.status(400).json(errors);
  }
  User.findOne({ email: req.body.email }).then((user) => {
    if (user) {
      return res.status(400).json({ email: "Email already exists" });
    } else {
      const newUser = new User({
        name: req.body.name,
        email: req.body.email,
        password: req.body.password,
      });

      bcrypt.genSalt(10, (err, salt) => {
        bcrypt.hash(newUser.password, salt, (err, hash) => {
          if (err) throw err;
          newUser.password = hash;
          newUser
            .save()
            .then((user) => res.json(user))
            .catch((err) => console.log(err));
        });
      });
    }
  });
});

router.get("/login?", (req, res) => {
  // Form validation

  const { errors, isValid } = validateLoginInput(req.query);
  // Check validation
  if (!isValid) {
    return res.status(400).json(errors);
  }

  const email = req.query.email;
  const password = req.query.password;
  console.log(password);

  // Find user by email
  User.findOne({ email }).then((user) => {
    // Check if user exists
    if (!user) {
      return res.json({ emailnotfound: "Wrong Credentials" });
    }

    // Check password
    bcrypt.compare(password, user.password).then((isMatch) => {
      if (isMatch) {
        res.status(200).json({
          msg: "logged in",
        });
      }
    });
  });
});

module.exports = router;
///////
